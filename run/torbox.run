# This file is part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2024 radio24
# Contact: anonym@torbox.ch
# Website: https://www.torbox.ch
# Github:  https://github.com/radio24/TorBox
#
# This file manages global variables -- please don't remove the file

# DNS resolutions
# During the installation, during updates and communicating with
# torproject.org, local DNS resolutions are made by default through
# Google’s and Cloudflare’s Domain Name Servers to avoid cheap censorship
# mechanisms. However, you can add here your preferred name servers
# (separated by a comma). Data traffic from the connected
# clients, which has to be protected, is completely routed through Tor
# (including DNS requests). Additionally, TorBox is configured that any
# direct DNS requests from clients are blocked.
NAMESERVERS=1.1.1.1,1.0.0.1,8.8.8.8,8.8.4.4

# Ping URL
# Sometimes, we have to check the connectivity of the TorBox with a ping.
# Because it is only a ping, and the pinged server should be very stable, accessible
# and have a extensive traffic, we choose as default http://google.com. However,
# you can change it to whatever you like. This server will also be used when
# activating the "Countermeasure against a disconnection when idle feature" in
# the Countermeasure sub-menu.
PING_SERVER=http://google.com

# Used URLs (pre-filled with the default values)
# For go
GO_DL_PATH=https://golang.org/dl/

# obfs4proxy repositories
OBFS4PROXY_USED=https://salsa.debian.org/pkg-privacy-team/obfs4proxy.git

# Snowflake repositories
SNOWFLAKE_USED=https://github.com/tgragnato/snowflake

# Wiringpi
WIRINGPI_USED=https://project-downloads.drogon.net/wiringpi-latest.deb

# Triggers some actions after a fresh installation
# 0 - Not a fresh installation - does nothing
# 1 - Will install and configure the OpenVPN server in a TorBox on a cloud installation (currently: 1 -> 3)
# 2 - Generate new unique SSH server keys needed after flashing the image on a SDcard (currently: 2 -> 3)
# 3 - Starts the first_use skript (currently: 3 -> 0)
FRESH_INSTALLED=0

# NEW v.0.5.4: Changed --> default has to be 1 for "torbox on a cloud" support
# SSH access from the Internet
# 0 - SSH access from the Internet is blocked (default)
# 1 - SSH access from the Internet is allowed
SSH_FROM_INTERNET=0

# NEW v.0.5.4: New added with default 1 for "torbox on a cloud" support
# OPENVPN access from the Internet
# 0 - OPENVPN access from the Internet is blocked
# 1 - OPENVPN access from the Internet is allowed (default)
OPENVPN_FROM_INTERNET=1

# Access to the Tor control port
# 0 - Tor control port is limited to localhost connections (default)
# 1 - Tor control port access from clients is allowed
TOR_CONTROL_PORT_ACCESS=0

# HTTP plain text blocking
# 0 - HTTP plain text traffic can pass through tor
# 1 - HTTP plain text traffic is blocked (default)
BLOCK_HTTP=1

# TorBox's automatic counteractions
# 0 - TorBox's automatic counteractions are deactivated (default)
# 1 - TorBox's automatic counteractions are activated
LOGCHECK=0

# Where is the Internet?
INTERNET_IFACE=eth0

# Where are the Clients? If you use multiple interfaces, separate them with a space.
CLIENT_IFACE=wlan0 eth1

# MAC address management:
# if set to "random", the the MAC adress will be randomized (this is the default)
# if set to "permanent", the permanent, unique MAC address will be used
# if set to xx:xx:xx:xx:xx:xx, then this MAC address will be used after a reboot
# NEW v.0.5.4: Randomizing usb0 will lock you out!!
MAC_eth0=random
MAC_eth1=random
MAC_wlan0=random
MAC_wlan1=random
MAC_usb0=permanent

# TWebSSH
# 0 - TorBox's Web SSH is disabled
# 1 - TorBox's Web SSH is enabled
TWEBSSH=1

# Exclude slow tor relays (Important: DO NOT ACTIVATE IF YOUR ANONYMITY HAS THE HIGHEST PRIORITY!)
#  0 - Not excluded
#  1 - Exclude tor relays with less bandwith than this number in kb/s
EX_SLOW=0

# TFS starting commands
# Syntax: TFS-<service_name>=<tfs command>
# This will configure the TFS program (do not remove or change that line - this is an anchor)

# TCS starting commands
# Syntax: TCS-<service_name>=<tcs command>
# This will configure the TCS program (do not remove or change that line - this is an anchor)

# Using an exclusion list for unprotected domains
# 0 - Using unprotected domains deactivated
# 1 - Using unprotected domains activated
UNPROTECTED_DOMAIN=0

# WLAN Failsafe: rc.local will detect, if the TorBox AP is on wlan1 (USB wlan adapter)
# Because using wlan1 as an AP could lock someone out, rc.local set it back to wlan0
# However, this may not be what the user wants. 0 will disabled that failsafe.
WLAN_FAILSAFE=1

# Through an entry in the Danger Zone sub-menu or in dealing with Captive Portals, TorBox
# only forwards the data stream without sending it through tor. In this case, a warning
# will be displayed in the main menu.
FORWARDING_ONLY=0

# TorBox is running on a cloud or as a cloud service
ON_A_CLOUD=0

# TorBox is running on a Raspberry Pi Zero 2 W as a RNDIS/Ethernet Gadget
TORBOX_MINI=0

## Global variables to help inter-script communication - don't change them!!

# Exit control variable
EXITID=0
