#!/bin/bash

# This file is part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2021 Patrick Truffer
# Contact: anonym@torbox.ch
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it is useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# DESCRIPTION
# This file installs additional network drivers
#
# SYNTAX
# ./install_network_drivers
#
# IMPORTANT
# Don't execute this script as root.
#
#
##### SET VARIABLES ######
#
#Colors
RED='\033[1;31m'
WHITE='\033[1;37m'
NOCOLOR='\033[0m'

# Identify the Operation System
CHECK_OS="OTHER"
if hostnamectl | grep -q "Raspbian" ; then CHECK_OS="Raspbian" ; fi
if hostnamectl | grep -q "Debian" ; then CHECK_OS="Debian" ; fi
if hostnamectl | grep -q "Ubuntu" ; then CHECK_OS="Ubuntu" ; fi

#Identifying the hardware (see also https://gist.github.com/jperkin/c37a574379ef71e339361954be96be12)
if grep -q --text 'Raspberry Pi' /proc/device-tree/model ; then CHECK_HD1="Raspberry Pi" ; fi
if grep -q "Raspberry Pi" /proc/cpuinfo ; then CHECK_HD2="Raspberry Pi" ; fi

##############################
######## FUNCTIONS ###########

# This function downloads, unpacks and installs the network drivers from fars-robotics.net
# Syntax install_network_drivers <path> <filename> <text_message>
install_network_drivers()
{
	path=$1
  filename=$2
  text_message=$3
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	mkdir install_network_driver
	cd install_network_driver
	echo -e "${RED}[+] Downloading $filename ${NOCOLOR}"
	wget http://downloads.fars-robotics.net/wifi-drivers/$path$filename
	echo -e "${RED}[+] Unpacking $filename ${NOCOLOR}"
	tar xzf $filename
	chmod a+x install.sh
	echo -e "${RED}[+] Installing the $text_message ${NOCOLOR}"
	sudo ./install.sh
	cd ~
	sudo rm -r install_network_driver
	sleep 2
}

######## PREPARATIONS ########
cd ~

# For a Raspberry Pi OS installation
if [ "$CHECK_OS" == "Raspbian" ]; then
	kernelversion=$(uname -rv | cut -d ' ' -f1-2 | tr '+' ' ' | tr '#' ' ' | sed -e "s/[[:space:]]\+/-/g")

	path_8188eu="8188eu-drivers/"
	filename_8188eu="8188eu-"$kernelversion".tar.gz"
	text_filename_8188eu="Realtek RTL8188EU Wireless Network Driver"
	install_network_drivers $path_8188eu $filename_8188eu $text_filename_8188eu

	path_8188fu="8188fu-drivers/"
	filename_8188fu="8188fu-"$kernelversion".tar.gz"
	text_filename_8188fu="Realtek RTL8188FU Wireless Network Driver"
	install_network_drivers $path_8188fu $filename_8188fu $text_filename_8188fu

	path_8192eu="8192eu-drivers/"
	filename_8192eu="8192eu-"$kernelversion".tar.gz"
	text_filename_8192eu="Realtek RTL8192EU Wireless Network Driver"
	install_network_drivers $path_8192eu $filename_8192eu $text_filename_8192eu

	# Deactivated because no driver for new kernels available
	#path_8192su="8192su-drivers/"
	#filename_8192su="8192su-"$kernelversion".tar.gz"
	#text_filename_8192su="Realtek RTL8192SU Wireless Network Driver"
	#install_network_drivers $path_8192su $filename_8192su $text_filename_8192su

	path_8812au="8812au-drivers/"
	filename_8812au="8812au-"$kernelversion".tar.gz"
	text_filename_8812au="Realtek RTL8812AU Wireless Network Driver"
	install_network_drivers $path_8812au $filename_8812au $text_filename_8812au

	path_8821cu="8821cu-drivers/"
	filename_8821cu="8821cu-"$kernelversion".tar.gz"
	text_filename_8821cu="Realtek RTL8821CU Wireless Network Driver"
	install_network_drivers $path_8821cu $filename_8821cu $text_filename_8821cu

	path_8822bu="8822bu-drivers/"
	filename_8822bu="8822bu-"$kernelversion".tar.gz"
	text_filename_8822bu="Realtek RTL8822BU Wireless Network Driver"
	install_network_drivers $path_8822bu $filename_8822bu $text_filename_8822bu

	# Deactivated because no driver for new kernels available
	#path_mt7610="mt7610-drivers/"
	#filename_mt7610="mt7610-"$kernelversion".tar.gz"
	#text_filename_mt7610="Mediatek MT7610 Wireless Network Driver"
	#install_network_drivers $path_mt7610 $filename_mt7610 $text_filename_mt7610

	# Deactivated because no driver for new kernels available
	#path_mt7612="mt7612-drivers/"
	#filename_mt7612="mt7612-"$kernelversion".tar.gz"
	#text_filename_mt7612="Mediatek MT7610 Wireless Network Driver"
	#install_network_drivers $path_mt7612 $filename_mt7612 $text_filename_mt7612

	sudo apt-get install -y raspberrypi-kernel-headers bc build-essential dkms

	# Installing the RTL8814AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8814AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8814au.git
	cd 8814au
	cp ~/torbox/install/Network/install-rtl8814au.sh .
	chmod a+x install-rtl8814au.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		#This has to be checked
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
		  sudo ./raspi32.sh
	 fi
	fi
		sudo ./install-rtl8814au.sh
	cd ~
	sudo rm -r 8814au
	sleep 2

	# Installing the RTL8821AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8821AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8821au.git
	cd 8821au
	cp ~/torbox/install/Network/install-rtl8821au.sh .
	chmod a+x install-rtl8821au.sh

	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
		  sudo ./raspi32.sh
	 fi
	fi
	 sudo ./install-rtl8821au.sh
	cd ~
	sudo rm -r 8821au
	sleep 2

	# Installing the RTL88x2BU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL88x2BU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/88x2bu.git
	cd 88x2bu
	cp ~/torbox/install/Network/install-rtl88x2bu.sh .
	chmod a+x install-rtl88x2bu.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
			sudo ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl88x2bu.sh
	cd ~
	sudo rm -r 88x2bu
	sleep 2

# For a Debian installation
elif [ "$CHECK_OS" == "Debian" ]; then
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "

	# Update kernel headers - important: this has to be done every time after upgrading the kernel
	echo -e "${RED}[+] Installing additional software... ${NOCOLOR}"
	sudo apt-get install -y linux-headers-$(uname -r)
	sudo apt-get install -y firmware-realtek dkms libelf-dev build-essential
	sleep 2

	# Installing the RTL8188EU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8188EU Wireless Network Driver ${NOCOLOR}"
	cd ~
	git clone https://github.com/lwfinger/rtl8188eu.git
	cd rtl8188eu
	make all
	sudo make install
	cd ~
	sudo rm -r rtl8188eu
	sleep 2

	# Installing the RTL8188FU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8188FU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/kelebek333/rtl8188fu
	sudo dkms add ./rtl8188fu
	sudo dkms build rtl8188fu/1.0
	sudo dkms install rtl8188fu/1.0
	sudo cp ./rtl8188fu/firmware/rtl8188fufw.bin /lib/firmware/rtlwifi/
	sudo rm -r rtl8188fu
	sleep 2

	# Installing the RTL8192EU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8192EU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/clnhub/rtl8192eu-linux.git
	cd rtl8192eu-linux
	sudo dkms add .
	sudo dkms install rtl8192eu/1.0
	cd ~
	sudo rm -r rtl8192eu-linux
	sleep 2

	# Installing the RTL8812AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8812AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8812au.git
	cd 8812au
	cp ~/torbox/install/Network/install-rtl8812au.sh .
	chmod a+x install-rtl8812au.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
		  sudo ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8812au.sh
	cd ~
	sudo rm -r 8812au
	sleep 2

	# Installing the RTL8814AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8814AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8814au.git
	cd 8814au
	cp ~/torbox/install/Network/install-rtl8814au.sh .
	chmod a+x install-rtl8814au.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
		  sudo ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8814au.sh
	cd ~
	sudo rm -r 8814au
	sleep 2

	# Installing the RTL8821AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8821AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8821au.git
	cd 8821au
	cp ~/torbox/install/Network/install-rtl8821au.sh .
	chmod a+x install-rtl8821au.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
		  sudo ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8821au.sh
	cd ~
	sudo rm -r 8821au
	sleep 2

	# Installing the RTL8821CU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8821CU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8821cu.git
	cd 8821cu
	cp ~/torbox/install/Network/install-rtl8821cu.sh .
	chmod a+x install-rtl8821cu.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
		  sudo ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8821cu.sh
	cd ~
	sudo rm -r 8821cu
	sleep 2

	# Installing the RTL88x2BU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL88x2BU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/88x2bu.git
	cd 88x2bu
	cp ~/torbox/install/Network/install-rtl88x2bu.sh .
	chmod a+x install-rtl88x2bu.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			 sudo ./raspi64.sh
		else
		  sudo ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl88x2bu.sh
	cd ~
	sudo rm -r 88x2bu
	sleep 2

# For a Ubuntu installation
elif [ "$CHECK_OS" == "Ubuntu" ]; then
	echo -e "${RED}[+] Installing additional software... ${NOCOLOR}"
	sudo apt-get install -y linux-headers-$(uname -r)
	# firmware-realtek is missing on ubuntu, but it should work without it
	sudo apt-get install -y dkms libelf-dev build-essential
	cd ~
	sleep 2

	# Installing the RTL8188EU
	# Disabled because it should be already supported by the kernel ➔ https://wiki.ubuntuusers.de/WLAN/Karten/Realtek/
	# clear
	# echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	# echo -e " "
	# echo -e "${RED}[+] Installing the Realtek RTL8188EU Wireless Network Driver ${NOCOLOR}"
	# cd ~
	# git clone https://github.com/lwfinger/rtl8188eu.git
	# cd rtl8188eu
	# make all
	# sudo make install
	# cd ~
	# sudo rm -r rtl8188eu
	# sleep 2

	# Installing the RTL8188FU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8188FU Wireless Network Driver ${NOCOLOR}"
	sudo ln -s /lib/modules/$(uname -r)/build/arch/arm /lib/modules/$(uname -r)/build/arch/armv7l
	git clone -b arm https://github.com/kelebek333/rtl8188fu rtl8188fu-arm
	sudo dkms add ./rtl8188fu-arm
	sudo dkms build rtl8188fu/1.0
	sudo dkms install rtl8188fu/1.0
	sudo cp ./rtl8188fu/firmware/rtl8188fufw.bin /lib/firmware/rtlwifi/
	sudo rm -r rtl8188fu
	sleep 2

	# Installing the RTL8192EU
	# Disabled because it should be already supported by the kernel ➔ https://wiki.ubuntuusers.de/WLAN/Karten/Realtek/
	# clear
	# echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	# echo -e " "
	# echo -e "${RED}[+] Installing the Realtek RTL8192EU Wireless Network Driver ${NOCOLOR}"
	# git clone https://github.com/clnhub/rtl8192eu-linux.git
	# cd rtl8192eu-linux
	# sudo dkms add .
	# sudo dkms install rtl8192eu/1.0
	# cd ~
	# sudo rm -r rtl8192eu-linux
	# sleep 2

	# Installing the RTL8812AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8812AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8812au.git
	cd 8812au
	cp ~/torbox/install/Network/install-rtl8812au.sh .
	sudo chmod a+x install-rtl8812au.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			./raspi64.sh
		else
		 ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8812au.sh
	cd ~
	sudo rm -r 8812au
	sleep 2

	# Installing the RTL8814AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8814AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8814au.git
	cd 8814au
	cp ~/torbox/install/Network/install-rtl8814au.sh .
	sudo chmod a+x install-rtl8814au.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			./raspi64.sh
		else
		 ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8814au.sh
	cd ~
	sudo rm -r 8814au
	sleep 2

	# Installing the RTL8821AU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8821AU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8821au.git
	cd 8821au
	cp ~/torbox/install/Network/install-rtl8821au.sh .
	sudo chmod a+x install-rtl8821au.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			./raspi64.sh
		else
		 ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8821au.sh
	cd ~
	sudo rm -r 8821au
	sleep 2

	# Installing the RTL8821CU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL8821CU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/8821cu.git
	cd 8821cu
	cp ~/torbox/install/Network/install-rtl8821cu.sh .
	sudo chmod a+x install-rtl8821cu.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			./raspi64.sh
		else
		 ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl8821cu.sh
	cd ~
	sudo rm -r 8821cu
	sleep 2

	# Installing the RTL88x2BU
	clear
	echo -e "${RED}[+] Installing additional network drivers...${NOCOLOR}"
	echo -e " "
	echo -e "${RED}[+] Installing the Realtek RTL88x2BU Wireless Network Driver ${NOCOLOR}"
	git clone https://github.com/morrownr/88x2bu.git
	cd 88x2bu
	cp ~/torbox/install/Network/install-rtl88x2bu.sh .
	sudo chmod a+x install-rtl88x2bu.sh
	if [ ! -z "$CHECK_HD1" ] || [ ! -z "$CHECK_HD2" ]; then
		if uname -r | grep -q "arm64"; then
			./raspi64.sh
		else
		 ./raspi32.sh
	 fi
	fi
	sudo ./install-rtl88x2bu.sh
	cd ~
	sudo rm -r 88x2bu
	sleep 2

elif [ "$CHECK_OS" == "OTHER" ]; then
	clear
	echo -e "${WHITE}[+] It seems that your Operation System is not supported, yet!!${NOCOLOR}"
	echo -e "${WHITE}[+] Please, contact anonym@torbox.ch for help! ${NOCOLOR}"
	read -n 1 -s -r -p "Press any key to continue"
	exit 1
fi
