#!/bin/bash

# This file is part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2021 Patrick Truffer
# Contact: anonym@torbox.ch
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it is useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# DESCRIPTION
# This file activate or deactivate Meek-Azure to circumvent censorship.
# Following variables can be used:
# $SNOWSTRING -> represents the status of the Snowflake bridging mode
# $MEEKSTRING -> represents the status of the Meek-Azure bridging mode
#
# SYNTAX
# ./meek-azure <MEEKSTRING> <SNOWSTRING>
#
# <MEEKSTRING> <SNOWSTRING> give the status of Snowflake and Meek-Azure.
#
# Possible values for <MEEKSTRING> <SNOWSTRING>: "ON!" or "OFF".
#
#
#
##### SET VARIABLES ######
#
#Set the the variables for the menu
MENU_WIDTH=80
MENU_WIDTH_REDUX=60
MENU_HEIGHT_15=15
MENU_HEIGHT_20=20
MENU_HEIGHT_25=25

#Colors
RED='\033[1;31m'
GREEN='\033[1;32m'
WHITE='\033[1;37m'
NOCOLOR='\033[0m'

#Other variables
BRIDGE_DB_URL="https://onionoo.torproject.org"
TORRC="/etc/tor/torrc"
RUNFILE="run/torbox.run"
MEEKSTRING=$1
SNOWSTRING=$2
EXITID=$(grep "^EXITID=" ${RUNFILE})
i=0


###########################
######## FUNCTIONS ########

#include lib
.  lib/torbox.lib


######## PREPARATIONS ########
###########################

	if [ $EXITID = "EXITID=1" ]; then
		sudo sed -i "s/^EXITID=.*/EXITID=0/" ${RUNFILE}
		exit 0
	fi
	if [ "$MEEKSTRING" = "OFF" ]; then
		clear
		trap "bash meek-azure; exit 0" SIGINT
		echo -e "${WHITE}[!] Let's first check, if MEEK-AZURE could work for you!${NOCOLOR}"
		readarray -t configured_meekazure_deactivated < <(grep "^#Bridge meek_lite " ${TORRC})
		if [ ${#configured_meekazure_deactivated[0]} = 0 ]; then
			echo " "
			echo -e "${WHITE}[!] There is no MEEK-AZURE configured! Did you change /etc/tor/torrc ?${NOCOLOR}"
			echo -e "${WHITE}[!] We cannot activate MEEK-AZURE! Contact anonym@torbox.ch for help!${NOCOLOR}"
			read -n 1 -s -r -p "Press any key to continue"
			exit 1
		else
			echo " "
			echo -e "${WHITE}[!] MEEK-AZURE is configured and ready!${NOCOLOR}"
			number_configured_meekazure_deactivated=${#configured_meekazure_deactivated[*]}
			sleep 5
		fi
		echo " "
		online_check $BRIDGE_DB_URL 1 1
		if [ $OCHECK == 1 ]; then
			echo " "
			echo -e "${WHITE}[+] OK - we are connected with the bridge database${NOCOLOR}"
			echo -e "${RED}[+] Checking next the MEEK-AZURE SERVER${NOCOLOR}"
			echo -e "${RED}[+] You can only use MEEK-AZURE, if the server is ONLINE!${NOCOLOR}"
			sleep 2
			echo " "
			MEEK_ON=0
			while [ $i -lt $number_configured_meekazure_deactivated ]
			do
				bridge_address=$(cut -d ' ' -f3,4 <<< ${configured_meekazure_deactivated[$i]})
				bridge_hash=$(cut -d ' ' -f2 <<< $bridge_address)
				if [ $CLEARNET_DECISSION == 1 ]; then
					bridge_status=$(./bridges_check.py -f $bridge_hash)
				else
					bridge_status=$(./bridges_check.py --network=tor -f $bridge_hash)
				fi
				if [ $bridge_status == 1 ]; then
					bridge_status_txt="${GREEN}- ONLINE${NOCOLOR}"
					MEEK_ON=$(( $MEEK_ON + 1 ))
				elif [ $bridge_status == 0 ]; then
					bridge_status_txt="${RED}- OFFLINE${NOCOLOR}"
				elif [ $bridge_status == 2 ]; then
					bridge_status_txt="- DOESN'T EXIST"
				fi
				i=$(( $i + 1 ))
				bridge_address="$i : $bridge_address $bridge_status_txt"
				echo -e "$bridge_address"
			done
			if [ $MEEK_ON == 0 ] ; then
				echo " "
				echo -e "${WHITE}[!] SORRY! - the MEEK-AZURE SERVER seems to be OFFLINE!${NOCOLOR}"
				echo -e "${RED}[+] We try to use it anyway, but most likely it will not work :(${NOCOLOR}"
			fi
			echo " "
			read -n 1 -s -r -p "Press any key to continue"
		else
			echo " "
			echo -e "${WHITE}[!] SORRY! - no connection with the bridge database!${NOCOLOR}"
			echo -e "${RED}[+] We cannot check the MEEK-AZURE SERVER - we try to use it anyway!${NOCOLOR}"
			echo " "
			read -n 1 -s -r -p "Press any key to continue"
		fi
		clear
		INPUT=$(cat text/activate-meek-azure-text)
		if (whiptail --title "TorBox - INFO (scroll down!)" --scrolltext --defaultno --no-button "NO" --yes-button "YES" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
			clear
			deactivating_bridge_relay
			deactivate_obfs4_bridges
			sudo sed -i "s/^Bridge obfs4 /#Bridge obfs4 /g" ${TORRC}
		  sudo sed -i "s/^Bridge snowflake /#Bridge snowflake /g" ${TORRC}
			sudo sed -i "s/^ClientTransportPlugin snowflake /#ClientTransportPlugin snowflake /g" ${TORRC}
			sudo sed -i "s/^#UseBridges/UseBridges/g" ${TORRC}
			sudo sed -i "s/^#UpdateBridgesFromAuthority/UpdateBridgesFromAuthority/g" ${TORRC}
			sudo sed -i "s/^#ClientTransportPlugin meek_lite,obfs4/ClientTransportPlugin meek_lite,obfs4/g" ${TORRC}
			sudo sed -i "s/^#Bridge meek_lite /Bridge meek_lite /g" ${TORRC}
			sudo sed -i "s/^EXITID=.*/EXITID=1/" ${RUNFILE}
			clear
			restarting_tor meek-azure
		fi
	else
		if [ "$MEEKSTRING" = "ON!" ]; then
			INPUT=$(cat text/deactivate-meek-azure-text)
			if (whiptail --title "TorBox - INFO" --defaultno --no-button "NO" --yes-button "YES" --yesno "$INPUT" $MENU_HEIGHT_15 $MENU_WIDTH_REDUX); then
				clear
				sudo sed -i "s/^Bridge snowflake /#Bridge snowflake /g" ${TORRC}
				sudo sed -i "s/^Bridge meek_lite /#Bridge meek_lite /g" ${TORRC}
				sudo sed -i "s/^UseBridges/#UseBridges/g" ${TORRC}
				sudo sed -i "s/^UpdateBridgesFromAuthority/#UpdateBridgesFromAuthority/g" ${TORRC}
				sudo sed -i "s/^ClientTransport/#ClientTransport/g" ${TORRC}
				sudo sed -i "s/^Bridge obfs4 /#Bridge obfs4 /g" ${TORRC}
				sudo sed -i "s/^EXITID=.*/EXITID=1/" ${RUNFILE}
				restarting_tor meek-azure
			fi
		fi
	fi
